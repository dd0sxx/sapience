### elizaOS Environment Variables ###
# To get started, copy this file to .env, or make a .env and add the settings you'd like to override
# Please read the comments for each of the configurations

# The only thing you ABSOLUTELY NEED to get up and running is one of the model provider keys, 
# i.e. OPENAI_API_KEY or ANTHROPIC_API_KEY, or setup the local-ai plugin
# Everything else is optional, and most settings and secrets can be configured in your agent or through the GUI
# For multi-agent, each agent will need keys for the various services it is connected to
# You can use the .env or environment variables generally for shared keys, such as to model providers, 
# database, etc, with scoped keys for services such as Telegram, Discord, etc

### MODEL PROVIDER KEYS ###
# Eliza is compatible with a wide array of model providers. Many have OpenAI compatible APIs, 
# and you can use them by overriding the base URL

# NOTE: You will need a provider that provides embeddings. So even if you use Claude, you will 
# need to get embeddings using another provider, for example openai or our local-ai plugin

# OpenRouter Configuration (REQUIRED)
OPENROUTER_API_KEY=sk-your-api-key-here

# Optional overrides:
# OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
# OPENROUTER_SMALL_MODEL=google/gemini-flash
# OPENROUTER_LARGE_MODEL=google/gemini-pro
# OPENROUTER_IMAGE_MODEL=x-ai/grok-2-vision-1212
# OPENROUTER_IMAGE_GENERATION_MODEL=google/gemini-2.5-flash-image-preview
# Browser proxy (frontend builds only)
# OPENROUTER_BROWSER_BASE_URL=https://your-proxy.example.com/openrouter
# Fallbacks if specific OPENROUTER models are not set
# SMALL_MODEL=google/gemini-flash
# LARGE_MODEL=google/gemini-pro
# IMAGE_MODEL=x-ai/grok-2-vision-1212
# IMAGE_GENERATION_MODEL=google/gemini-2.5-flash-image-preview

### LOCAL AI CONFIGURATION ###
USE_LOCAL_AI=
USE_STUDIOLM_TEXT_MODELS=
USE_OLLAMA_TEXT_MODELS=

# Ollama Configuration
OLLAMA_API_ENDPOINT=
OLLAMA_MODEL=
USE_OLLAMA_EMBEDDING=
OLLAMA_EMBEDDING_MODEL=
OLLAMA_SMALL_MODEL=
OLLAMA_MEDIUM_MODEL=
OLLAMA_LARGE_MODEL=

# StudioLM Configuration
STUDIOLM_SERVER_URL=
STUDIOLM_SMALL_MODEL=
STUDIOLM_MEDIUM_MODEL=
STUDIOLM_EMBEDDING_MODEL=

### DATABASE ###
# By default, Eliza will use a local pglite instance
# If you fill out POSTGRES_URL, the agent will connect to your postgres instance instead of using the local path

# You can override the pglite data directory
# PGLITE_DATA_DIR=/Users/UserName/eliza/packages/.pglite/

# Fill this out if you want to use Postgres
POSTGRES_URL=

### LOGGING CONFIGURATION ###
# Logging Configuration (supported: fatal, error, warn, info, debug, trace | default: info)
LOG_LEVEL=

# Sentry Configuration
SENTRY_LOGGING=true
SENTRY_DSN=
SENTRY_ENVIRONMENT=
SENTRY_TRACES_SAMPLE_RATE=
SENTRY_SEND_DEFAULT_PII=

### API KEYS ###
# Many services require API keys to function
# Most plugins will indicate what is needed in their README.md and throw helpful errors if they are missing
BIRDEYE_API_KEY=
JUPITER_API_KEY=
HELIUS_API_KEY=
COINMARKETCAP_API_KEY=
ZEROEX_API_KEY=
COINGECKO_API_KEY=

### SINGLE AGENT VARIABLES ###
# If you are running multiple agents, you will need to configure these variables in the agent secrets 
# (available in the GUI) OR you can namespace the secrets and connect them up in your character definition

# Example: 
# settings: {
#   process.env.COMMUNITY_MANAGER_DISCORD_API_TOKEN
# }

# Note: See below for multi-agent examples

# Discord Configuration
DISCORD_APPLICATION_ID=
DISCORD_API_TOKEN=

# Telegram Configuration
TELEGRAM_BOT_TOKEN=

# Twitter Configuration
TWITTER_USERNAME=
TWITTER_PASSWORD=
TWITTER_EMAIL=
TWITTER_ENABLE_POST_GENERATION=
TWITTER_POST_IMMEDIATELY=
TWITTER_INTERACTION_ENABLE=
TWITTER_TIMELINE_ENABLE=
TWITTER_SPACES_ENABLE=
TWITTER_TIMELINE_MODE=
TWITTER_TIMELINE_POLL_INTERVAL=

# EVM Configuration (REQUIRED for on-chain attestations)
EVM_PRIVATE_KEY=your_ethereum_private_key_here
EVM_CHAINS=mainnet,sepolia,base,arbitrum,polygon
EVM_PROVIDER_URL=https://mainnet.base.org

# Solana Configuration
SOLANA_PUBLIC_KEY=
SOLANA_PRIVATE_KEY=

### SAGE PREDICTION AGENT CONFIGURATION ###
# Autonomous Mode Settings (can also be set in character configuration)
AUTO_MODE_ENABLED=true             # Start in auto mode on launch
AUTO_MODE_INTERVAL=300000          # Loop interval in milliseconds (5 minutes default)
AUTO_MODE_MIN_CONFIDENCE=0.6       # Minimum confidence threshold (0-1)
AUTO_MODE_BATCH_SIZE=5             # Number of markets to process per cycle

# Database Configuration (Optional - defaults to SQLite)
DATABASE_URL=sqlite:./data/sage.db

# Custom RPC URL (Optional - defaults to Base mainnet)
RPC_URL=https://mainnet.base.org

### PARLAY TRADING CONFIGURATION ###
# Enable/disable $1 wagers on parlays based on forecasts
ENABLE_PARLAY_TRADING=false

# Trading Configuration
PARLAY_WAGER_AMOUNT=1000000                # $1 in USDC (6 decimals: 1 * 10^6)
MIN_TRADING_CONFIDENCE=0.6                 # Only trade if prediction confidence is above this threshold
MAX_TRADING_SLIPPAGE=5                     # Maximum acceptable slippage percentage