{
  "address": "0x9052992cB14b7af25a3c40B27211d369c9ff7758",
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_config",
          "type": "tuple",
          "internalType": "struct PredictionMarketUmaResolver.Settings",
          "components": [
            {
              "name": "maxPredictionMarkets",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "optimisticOracleV3",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "bondCurrency",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "bondAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "assertionLiveness",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        },
        {
          "name": "_approvedAsserters",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approvedAsserters",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionDisputedCallback",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertionResolvedCallback",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "assertedTruthfully",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "config",
      "inputs": [],
      "outputs": [
        {
          "name": "maxPredictionMarkets",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "optimisticOracleV3",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "bondCurrency",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "bondAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "assertionLiveness",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decodePredictionOutcomes",
      "inputs": [
        {
          "name": "encodedPredictedOutcomes",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct PredictionMarketUmaResolver.PredictedOutcome[]",
          "components": [
            {
              "name": "marketId",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "prediction",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "encodePredictionOutcomes",
      "inputs": [
        {
          "name": "predictedOutcomes",
          "type": "tuple[]",
          "internalType": "struct PredictionMarketUmaResolver.PredictedOutcome[]",
          "components": [
            {
              "name": "marketId",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "prediction",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "resolvePrediction",
      "inputs": [
        {
          "name": "encodedPredictedOutcomes",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "isValid",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "error",
          "type": "uint8",
          "internalType": "enum IPredictionMarketResolver.Error"
        },
        {
          "name": "makerWon",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submitAssertion",
      "inputs": [
        {
          "name": "claim",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "endTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "resolvedToYes",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "umaSettlements",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "marketId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "resolvedToYes",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "submissionTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "settled",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "validatePredictionMarkets",
      "inputs": [
        {
          "name": "encodedPredictedOutcomes",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "isValid",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "error",
          "type": "uint8",
          "internalType": "enum IPredictionMarketResolver.Error"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wrappedMarkets",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "marketId",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "assertionSubmitted",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "settled",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "resolvedToYes",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AssertionDisputed",
      "inputs": [
        {
          "name": "marketId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "disputeTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AssertionResolved",
      "inputs": [
        {
          "name": "marketId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "resolvedToYes",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "assertedTruthfully",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "resolutionTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AssertionSubmitted",
      "inputs": [
        {
          "name": "asserter",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "marketId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "resolvedToYes",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "submissionTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MarketWrapped",
      "inputs": [
        {
          "name": "wrapper",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "marketId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "claim",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "endTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "wrapTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AssertionAlreadySubmitted",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FailedInnerCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAssertionId",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMarketId",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketAlreadySettled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketAlreadyWrapped",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketNotDisputed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketNotEnded",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketNotOpen",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketNotSettled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MustHaveAtLeastOneMarket",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotEnoughBondAmount",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "bondCurrency",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "bondAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "initialBalance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "finalBalance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "OnlyApprovedAssertersCanCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyOptimisticOracleV3CanCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "TooManyMarkets",
      "inputs": []
    }
  ],
  "constructorArgs": [
    {
      "maxPredictionMarkets": "15",
      "optimisticOracleV3": "0xa6147867264374F324524E30C02C331cF28aa879",
      "bondCurrency": "0xaf88d065e77c8cC2239327C5EDb3A432268e5831",
      "bondAmount": "500000000",
      "assertionLiveness": "600"
    },
    [
      "0xdb5Af497A73620d881561eDb508012A5f84e9BA2"
    ]
  ],
  "linkedLibraries": {},
  "deployTxnHash": "0x5110d5e3cba9c71245e2579cfe65678abc7ed26773040799fd9c740883171457",
  "deployTxnBlockNumber": "381946955",
  "deployTimestamp": "1758574646",
  "sourceName": "src/predictionMarket/resolvers/PredictionMarketUmaResolver.sol",
  "contractName": "PredictionMarketUmaResolver",
  "deployedOn": "deploy.UMAResolver",
  "highlight": true,
  "gasUsed": 1477043,
  "gasCost": "10000000"
}