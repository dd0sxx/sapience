name="foil"
version="0.1"

[var.settings]
owner = "0xEB045D78d273107348b0300c01D29B7552D622ab"
startTime = "1719792000" # 2024-07-01 00:00:00 GMT
endTime = "1735689599" # 2024-12-31 23:59:59 GMT
baseAssetMinPrice = "7000" # 3
baseAssetMaxPrice = "46000" # 90
feeRate = "10000" # 1%
startingSqrtPriceX96 = "396140812571321687967719751680000000000" # 25
resolver = "0x0000000000000000000000000000000000000000"
bondAmount = "5000000000"
priceUnit = "<%= formatBytes32String('gwei/gas') %>"
depends=[]

[clone.UMA]
source="uma-mock-oracle-ancillary"
target="foil@uma-mock"

[clone.Uniswap]
source="uniswap"
target="foil@uniswap"

[clone.CollateralAsset]
source="mintable-token@permissionless-mint"
target="foil@test-collateral-asset"
var.symbol="wstETH"

[clone.BondCurrency]
source="mintable-token@permissionless-mint"
target="foil@test-bond-currency"
var.symbol="USDC"
var.decimals = "6"

[deploy.ReentrancyGuard]
artifact = "ReentrancyGuard"

[deploy.EpochConfigurationModule]
artifact="EpochConfigurationModule"
libraries.ReentrancyGuard="<%= contracts.ReentrancyGuard.address %>"

[deploy.EpochLiquidityModule]
artifact="EpochLiquidityModule"

[deploy.EpochUMASettlementModule]
artifact="EpochUMASettlementModule"

[deploy.EpochTradeModule]
artifact="EpochTradeModule"

[deploy.EpochNftModule]
artifact="EpochNftModule"

[router.Foil]
contracts=[
  "EpochConfigurationModule",
  "EpochLiquidityModule",
  "EpochUMASettlementModule",
  "EpochTradeModule",
  "EpochNftModule",
]

[invoke.initializeMarket]
target="Foil"
func="initializeMarket"
args=[
  "<%= settings.owner %>",
  "<%= imports.CollateralAsset.contracts.Token.address %>",
  "<%= imports.Uniswap.contracts.NonfungiblePositionManager.address %>",
  "<%= imports.Uniswap.contracts.Quoter.address %>",
  "<%= imports.Uniswap.contracts.SwapRouter.address %>",
  "<%= imports.UMA.contracts.MockOracleAncillary.address %>",
  { baseAssetMinPriceTick = "<%= settings.baseAssetMinPriceTick %>", baseAssetMaxPriceTick = "<%= settings.baseAssetMaxPriceTick %>", feeRate = "<%= settings.feeRate %>", assertionLiveness= "<%= settings.assertionLiveness %>", bondCurrency = "<%= imports.BondCurrency.contracts.Token.address %>", bondAmount= "<%= settings.bondAmount %>", priceUnit= "<%= settings.priceUnit %>" }
]
depends=["router.Foil"]


[invoke.createEpoch]
target="Foil"
func="createEpoch"
args=[
  "<%= settings.startTime %>",
  "<%= settings.endTime %>",
  "<%= settings.startingSqrtPriceX96 %>"
]
depends=["invoke.initializeMarket"]

[invoke.gimmeTokens]
target="CollateralAsset.Token"
func="mint"
args=["<%= parseEther('1000') %>", "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"]
depends=["clone.CollateralAsset"]